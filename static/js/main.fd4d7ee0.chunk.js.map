{"version":3,"sources":["Tile.js","Level.js","levels.js","Timer.js","App.js","serviceWorker.js","index.js"],"names":["Tile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mouseDown","handleMouseDown","bind","assertThisInitialized","handleMouseUp","disabled","console","log","setState","comparePattern","id","color","width","height","totalTiles","backgroundColor","highlight","classes","concat","style","generateStyles","react_default","a","createElement","className","onMouseDown","onMouseUp","Component","Level","levelEnded","clickCount","tilesDisabled","tiles","pattern","createPattern","userPattern","showPattern","handleClick","enableTiles","i","patternLength","push","Math","ceil","random","tileCount","colorIndex","colors","length","src_Tile","key","level","setTimeout","highlightTile","tile","document","querySelector","classList","add","remove","removeLife","increaseLevel","onClick","generateTiles","levels","App","lives","hideGame","buttonText","statusCode","gameStatus","updateGameStatus","livesDisplay","levelDisplay","src_Level","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd4d7ee0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Tile extends Component {  \n    constructor(props) {\n\t\tsuper(props);\n        \n\t\tthis.state = {\n\t\t\tmouseDown: false\n\t\t};\n        \n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n    }\n    \n\thandleMouseDown() {\n\t\tif (!this.props.disabled) {\n\t\t\tthis.setState({\n\t\t\t    mouseDown: true\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log('tiles disabled');\n\t\t}\n\t}\n    \n\thandleMouseUp() {\n\t\tif (!this.props.disabled) {\n\t\t\tthis.setState({\n\t\t\t    mouseDown: false\n\t\t\t});\n        \n\t        const comparePattern = this.props.comparePattern;\n\t        comparePattern(this.props.id);\n\t\t}\n\t}\n\t\n    generateStyles(color) {\n\t\tlet width;\n\t\tlet height;\n\t\t\n\t\tif (this.props.totalTiles > 6) {\n\t\t\twidth = '100px';\n\t\t\theight = '100px'\n\t\t} else if (this.props.totalTiles > 4) {\n\t\t\twidth ='150px';\n\t\t\theight = '150px';\n\t\t} else {\n\t\t\twidth = '200px';\n\t\t\theight = '200px';\n\t\t}\n\t\t\n        return ({\n            backgroundColor: color,\n\t\t\twidth: width,\n\t\t\theight: height\n        });\n    }\n    \n    render() {\n        const highlight = this.state.mouseDown ? 'highlight' : '';\n        const classes = `tile tile-${this.props.id} ${highlight} color-${this.props.id}`;\n        const style = this.generateStyles(this.props.color);\n        \n        return (\n        \t<div className={classes} style={style} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp}>\n        \t</div>\n        )\n    }\n}\n\nexport default Tile;","import React, { Component } from 'react';\nimport Tile from './Tile.js';\n\n\nclass Level extends Component {\n    constructor(props) {\n\t\tsuper(props);\n        \n\t\tthis.state = {\n\t\t\tlevelEnded: false,\n            clickCount: 0,\n\t\t\ttilesDisabled: true\n\t\t};\n        \n        this.tiles = [];\n        this.pattern = this.createPattern();\n        this.userPattern = [];\n        this.showPattern = this.showPattern.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\t\tthis.enableTiles = this.enableTiles.bind(this);\n    }\n    \n    componentDidMount() {\n        this.showPattern();\n    }\n    \n    componentDidUpdate() {\n        if (this.state.tilesDisabled) {\n            this.showPattern();\n        }\n    }\n    \n\tset tilesDisabled(disabled) {\n\t\tthis.setState({\n\t\t\ttilesDisabled: false\n\t\t});\n\t}\n\t\n    createPattern() {\n        const pattern = [];\n        \n        for (let i = 0; i < this.props.patternLength; i++) {\n            pattern.push(Math.ceil(Math.random() * this.props.tileCount - 1));\n        }\n        \n        return pattern;\n    }\n    \n\tgenerateTiles() {\n        let tiles = [];\n\t\tlet colorIndex = 0;\n\t\t\n\t\tfor (let i = 0; i < this.props.tileCount; i++) {\n\t\t\tif (colorIndex > this.props.colors.length - 1) {\n\t\t\t\tcolorIndex = 0;\n\t\t\t}\n\t\t\t\n\t\t\ttiles.push(<Tile \t\n                        key={i}\n                        id={i} \n\t\t\t\t\t    color={this.props.colors[colorIndex]}\n                        pattern={this.pattern}\n                        comparePattern={this.comparePattern.bind(this)}\n\t\t\t\t\t\ttotalTiles={this.props.tileCount}\n\t\t\t\t\t\tdisabled={this.state.tilesDisabled}\n\t\t\t\t\t    />\n\t\t\t);\n\t\t\t\n\t\t\tcolorIndex += 1;\n\t\t}\n        \n        return tiles;\n\t}\n    \n    handleClick() {\n        this.setState({\n            levelEnded: false,\n\t\t\ttilesDisabled: true,\n            clickCount: 0\n        });\n    }\n\t\n\tenableTiles() {\n\t\tthis.setState({\n\t\t\ttilesDisabled: false\n\t\t});\n\t}\n    \n    showPattern() {\n        let i = 0;\n        let level = this;\n \t   \tvar help;\n\t\t\n        setTimeout(function() {\n            help = highlightTile(i);\n        }, 1250);\n\t\t\n        function highlightTile(i) {\n            if (i < level.pattern.length) {\n                const id = level.pattern[i];\n                const tile = document.querySelector(`.tile-${id}`);\n\n                if (tile) {\n                    tile.classList.add('highlight');\n                    i += 1;\n\n                    setTimeout(function(){\n                        tile.classList.remove('highlight');\n\n                        setTimeout(function(){\n                            return highlightTile(i);\n                        }, 200);\n                    }, 700);\n                }\n            } else {\n            \treturn 'done!'\n            } \n        }\n    }\n\t \n    comparePattern(id) {        \n        if (this.state.clickCount < this.pattern.length - 1) {    \n            if (this.pattern[this.state.clickCount] !== id) {\n                this.setState({\n                    levelEnded: true,\n                    clickCount: this.state.clickCount + 1\n                });\n                \n                const removeLife = this.props.removeLife;\n                removeLife();\n            } else {\n                this.setState({\n                    clickCount: this.state.clickCount + 1\n                });\n            }\n        } else {\n            const increaseLevel = this.props.increaseLevel;\n            increaseLevel();\n        }\n    }\n    \n    render() {\n        return (\n            <div className = \"game-board\">\n                { ! this.state.levelEnded\n                  ? <div className = \"level\">\n\t\t\t\t\t\t{ this.props.id == 0\n\t\t\t\t\t\t  ? <div className = \"instructions\">\n\t\t\t\t\t\t\t\tWatch the pattern. When you are ready, click the got it button and then use your mouse to repeat it by clicking on the same tiles in the same order.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t  : ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\n                \t\t{ this.generateTiles() }\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ ! this.state.tilesDisabled\n\t\t\t\t\t\t  ? ''\n\t\t\t\t\t\t  : <button className=\"button gotit\" onClick={this.enableTiles}>Got it</button>\n\t\t\t\t\t\t}\n                \t</div>\n                  : <button className=\"button\" onClick={this.handleClick}>Try again?</button>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Level;","var levels = [{\n\ttileCount: 9,\n    patternLength: 2\n},{\n\ttileCount: 4,\n    patternLength: 3\n},{\n\ttileCount: 4,\n    patternLength: 4\n},{\n    tileCount: 4,\n    patternLength: 5\n},{\n    tileCount: 6,\n    patternLength: 5\n},{\n    tileCount: 6,\n    patternLength: 6\n},{\n    tileCount: 6,\n    patternLength: 7\n},{\n    tileCount: 9,\n    patternLength: 7\n},{\n    tileCount: 9,\n    patternLength: 8\n},{\n    tileCount: 9,\n    patternLength: 9\n}];\n\nexport default levels;\n\n    ","import React, { Component } from 'react';\n\n\nclass Timer extends Component {\n    constructor(props) {\n\t\tsuper(props);\n    }\n    \n    render() {\n        return (\n        \t<div className = \"timer\">\n                Timer\n        \t</div>\n        )\n    }\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport Level from './Level.js';\nimport Timer from './Timer.js';\nimport levels from './levels.js'\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n\t\tsuper(props);\n        \n\t\tthis.state = {\n\t\t\tlives: 3,\n\t\t\thideGame: true,\n            level: 0,\n            colors: ['#e6194B', '#f58231', '#ffe119', '#3cb44b', '#4363d8', '#911eb4'],\n            buttonText: 'Begin',\n            statusCode: 1\n\t\t};\n        \n        this.handleClick = this.handleClick.bind(this);\n    }\n    \n    updateGameStatus(gameStatus) {\n        if (gameStatus === 'NEW_GAME') {\n            this.setState({\n                hideGame: true,\n                buttonText: 'Play Again?',\n                lives: 3,\n                level: 0\n            });\n        } else if (gameStatus === 'NEXT_LEVEL') {\n            this.setState({\n                hideGame: true,\n                buttonText: 'next level',\n                lives: 3,\n                level: this.state.level + 1\n            });\n        }\n    }\n    \n    handleClick() {\n        this.setState({\n            hideGame: false\n        });\n    }\n    \n    removeLife() {\n        const lives = this.state.lives - 1;\n        \n        if (lives > 0) {\n            this.setState({\n                lives: lives\n            });\n        } else {\n            this.updateGameStatus('NEW_GAME');\n        }\n    }\n    \n    increaseLevel(){\n        this.updateGameStatus('NEXT_LEVEL');\n    }\n    \n    render() {\n        const removeLife = this.removeLife;\n        const increaseLevel = this.increaseLevel;\n        const livesDisplay = this.state.lives > 1 ? `${this.state.lives} lives remaining` : `${this.state.lives} life remaining`\n        const levelDisplay = `Level ${this.state.level + 1} `\n        \n\n        return (\n            <div className = \"game\">\n                { this.state.hideGame \n                  ?\t<button\n                \t\tclassName=\"button\"\n                \t\tonClick={this.handleClick}>\n                        { this.state.buttonText }\n                 \t</button>\n                \n            \t  : <div className = \"play-area\">\n                        <div className = \"game-state\">\n                            <div className = \"level-display\">{ levelDisplay }</div>\n                            <div className = \"lives-display\">{ livesDisplay }</div>\n                        </div>\n                        \n                        <Level \n                \t\tid={this.state.level}\n                \t\ttileCount={levels[this.state.level].tileCount}\n                        patternLength={levels[this.state.level].patternLength}\n                        colors={this.state.colors}\n                        removeLife={removeLife.bind(this)}\n                        increaseLevel={increaseLevel.bind(this)}\n                \t\t/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}